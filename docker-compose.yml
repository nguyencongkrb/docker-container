version: '3.5'

networks:
  backend:
    driver: bridge

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}
  mongo:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
services:
### MySQL ###
  mysql:
    #platform: 'linux/amd64' # fix M1
    image: 'arm64v8/mysql' # Change to arm64v8 --> myql8
    build: ./mysql
    container_name: docker-mysql
    command:
      mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-connect='SET NAMES UTF8;' --group_concat_max_len=5120
    environment:
      - MYSQL_DATABASE=default
      - MYSQL_USER=default
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=root
      - TZ=UTC
    volumes:
      - ${DATA_PATH_HOST}/mysql-data:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - '3306:3306'  
    networks:
      - backend
    restart: always  
###  Postgres ### 
  postgres:
    # platform: 'linux/x86_64' # fix M1
    image: 'arm64v8/postgres:alpine'
    build: ./postgres
    container_name: docker-postgres
    volumes:
      - ${DATA_PATH_HOST}/postgres-data:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=default
      - POSTGRES_USER=default
      - POSTGRES_PASSWORD=secret
    networks:
      - backend
### MongoDB ###
  mongo:
    # platform: 'linux/x86_64' # fix M1
    image: 'arm64v8/mongo:3.6.22'
    build: ./mongo
    container_name: docker-mongo
    volumes:
      - ${DATA_PATH_HOST}/mongo-data:/data/db
      - ${DATA_PATH_HOST}/mongo-config:/data/configdb
    ports:
      - '27017:27017'
    networks:
      - backend
    restart: always    
### Redis ###
  redis:
    # platform: 'linux/x86_64' # fix M1
    image: 'arm64v8/redis'
    build: ./redis
    container_name: docker-redis
    volumes:
      - ${DATA_PATH_HOST}/redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - '6379:6379'
    networks:
      - backend
    restart: always    
