networks:
  backend:
    driver: bridge

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}
  mongo:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
services:
### MySQL ###
  mysql:
    image: 'arm64v8/mysql:8.4' # Change to arm64v8 --> mysql8
    build: ./mysql
    container_name: docker-mysql
    command:
      mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-connect='SET NAMES UTF8;' --group_concat_max_len=5120
    environment:
      - MYSQL_DATABASE=default
      - MYSQL_USER=default
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=root
      - TZ=UTC
    volumes:
      - ${DATA_PATH_HOST}/mysql-data:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - '3306:3306'  
    networks:
      - backend
    restart: always  
###  Postgres ### 
  postgres:
    image: 'arm64v8/postgres:alpine'
    build: ./postgres
    container_name: docker-postgres
    volumes:
      - ${DATA_PATH_HOST}/pgdata:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=default
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    networks:
      - backend
### MongoDB ###
  mongo:
    image: 'arm64v8/mongo:3.6.22'
    build: ./mongo
    container_name: docker-mongo
    volumes:
      - ${DATA_PATH_HOST}/mongo-data:/data/db
      - ./mongo/mongo-config:/data/configdb
    ports:
      - '27017:27017'
    networks:
      - backend
    restart: always    
### Redis ###
  redis:
    image: 'arm64v8/redis'
    build: ./redis
    container_name: docker-redis
    volumes:
      - ${DATA_PATH_HOST}/redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - '6379:6379'
    networks:
      - backend
    restart: always
###  kafka cluster  ###   
  kafka:
    image: bitnami/kafka:3.6.1
    container_name: kafka
    ports:
      - "9192:9092" # broker port
      - "9193:9094" # Controller port
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://192.168.1.79:9193 # update ip address
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ${DATA_PATH_HOST}/kafka-data:/bitnami/kafka
    networks:
      - backend
###  kafka UI  ###
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=cluster-0
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - DYNAMIC_CONFIG_ENABLED='true'
    depends_on:
      - kafka
    networks:
      - backend
###  dev notification ### 
  notification:
    platform: 'linux/amd64' # fix chip ARM
    image: 'we_notification'
    build: ./notification
    container_name: docker-notification
    ports:
      - '1337:1337'
    environment:
      - OAUTH_URI=https://auth-dev.wewumbo.io
      - OAUTH_CHECK_LOGIN=/api/v1/user/check-login
      - CLIENT_ID=1_ug1mmhlvphc4gw8w0s48wc0w880kosoc844cgw8gw84kcwwg4
      - CLIENT_SECRET=x1jv3rtdufkcssk0sckkkkwwook808go8ckcg0wkgc48wk0wo
      - API_URI=https://rest-dev.wewumbo.io
      - API_GET_INFO=/v1/user/info
      - MONGO_HOST=docker-mongo
      - MONGO_DB=dev_notification
      - REDIS_PREFIX=wedev_
      - REDIS_HOST=docker-redis
      - FIREBASE_SERVER_KEY=AIzaSyCzS0EW9dSWKXnDURNihLW21j9fd5Av0eQ
    networks:
      - backend
    extra_hosts:
      - rest-dev.wewumbo.io:host-gateway
      - auth-dev.wewumbo.io:host-gateway      
